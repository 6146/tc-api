SELECT SKIP @firstRowIndex@ FIRST @pageSize@
  r.round_id
, r.name
, rs.start_time AS start_date
, NVL(rd1.div_i_competitors, 0) + NVL(rd2.div_ii_competitors, 0) AS total_competitors
, rd1.div_i_competitors
, rd2.div_ii_competitors
, rd1.div_i_total_solutions_submitted
, rd2.div_ii_total_solutions_submitted
, CASE WHEN rd1.div_i_competitors = 0 THEN 0 ELSE rd1.div_i_total_solutions_submitted / rd1.div_i_competitors END::DECIMAL(10, 2) AS div_i_average_solutions_submitted
, CASE WHEN rd2.div_ii_competitors = 0 THEN 0 ELSE rd2.div_ii_total_solutions_submitted / rd2.div_ii_competitors END::DECIMAL(10, 2) AS div_ii_average_solutions_submitted
, rd1.div_i_total_solutions_challenged
, rd2.div_ii_total_solutions_challenged
, CASE WHEN rd1.div_i_competitors = 0 THEN 0 ELSE rd1.div_i_total_solutions_challenged / rd1.div_i_competitors END::DECIMAL(10, 2) AS div_i_average_solutions_challenged
, CASE WHEN rd2.div_ii_competitors = 0 THEN 0 ELSE rd2.div_ii_total_solutions_challenged / rd2.div_ii_competitors END::DECIMAL(10, 2) AS div_ii_average_solutions_challenged
FROM round r
INNER JOIN round_segment rs ON rs.round_id = r.round_id AND rs.segment_id = 1
LEFT JOIN (
    SELECT
      rr.round_id
    , COUNT(*) AS div_i_competitors
    , NVL((SELECT COUNT(*) FROM challenge c WHERE c.status_id <> 92 AND c.round_id = rr.round_id AND c.succeeded = 1), 0) AS div_i_total_solutions_challenged
    , NVL((SELECT SUM(CASE WHEN cs.status_id >= 130 THEN 1 ELSE 0 END) FROM component_state cs WHERE cs.round_id = rr.round_id), 0) AS div_i_total_solutions_submitted
    FROM room_result rr
    INNER JOIN room ON room.room_id = rr.room_id AND room.division_id = 1
    GROUP BY rr.round_id
) rd1 ON rd1.round_id = r.round_id
LEFT JOIN (
    SELECT
      rr.round_id
    , COUNT(*) AS div_ii_competitors
    , NVL((SELECT COUNT(*) FROM challenge c WHERE c.status_id <> 92 AND c.round_id = rr.round_id AND c.succeeded = 1), 0) AS div_ii_total_solutions_challenged
    , NVL((SELECT SUM(CASE WHEN cs.status_id >= 130 THEN 1 ELSE 0 END) FROM component_state cs WHERE cs.round_id = rr.round_id), 0) AS div_ii_total_solutions_submitted
    FROM room_result rr
    INNER JOIN room ON room.room_id = rr.room_id AND room.division_id = 2
    GROUP BY rr.round_id
) rd2 ON rd2.round_id = r.round_id
WHERE r.status = '@status@'
AND r.round_type_id IN (1, 2, 10)
AND r.name LIKE ('@challengeName@')
ORDER BY @sortColumn@ @sortOrder@, round_id desc
