SELECT
SKIP @firstRowIndex@
FIRST @pageSize@
*
FROM table(MULTISET(
SELECT
  p.problem_id
, c.component_id
, ro.room_id
, rc.round_id
, rc.division_id
, p.name AS problem_name
, ptl.problem_type_desc AS problem_type
, CASE WHEN (p.problem_type_id = 1 AND p.proposed_difficulty_id = 1) THEN 'Easy'::nvarchar(50)
       WHEN (p.problem_type_id = 1 AND p.proposed_difficulty_id = 2) THEN 'Medium'::nvarchar(50)
       WHEN (p.problem_type_id = 1 AND p.proposed_difficulty_id = 3) THEN 'Hard'::nvarchar(50)
    END AS difficulty
, rc.points
, NVL( CASE WHEN pcs.status_id < 120 THEN 'New'::nvarchar(50)
            WHEN pcs.status_id = 150 THEN 'Solved'::nvarchar(50)
            WHEN pcs.status_id >= 120 AND pcs.status_id != 150 THEN 'Viewed'::nvarchar(50)
       END, 'New') AS status
, NVL(pcs.points, 0) AS my_points
FROM problem p
INNER JOIN problem_type_lu ptl ON ptl.problem_type_id = p.problem_type_id
INNER JOIN component c ON c.problem_id = p.problem_id
INNER JOIN round_component rc ON rc.component_id = c.component_id
INNER JOIN round r ON r.round_id = rc.round_id AND r.status = 'A' AND r.round_type_id = 3
INNER JOIN room ro ON ro.round_id = rc.round_id AND ro.room_type_id = 3 -- practice room
LEFT JOIN practice_component_state pcs ON pcs.round_id = rc.round_id AND pcs.component_id = c.component_id AND pcs.coder_id = @userId@
)) srp
WHERE 1=1
ORDER BY @sortColumn@ @sortOrder@
