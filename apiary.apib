FORMAT: 1A
HOST: http://api.topcoder.com/v2

# TopCoder API
Programmatically access TopCoder contests and members.

#Group Software Contests

## Top Ranked Members [/software/statistics/tops/{contestType}?pageIndex={pageIndex}&pageSize={pageSize}&sortColumn={sortColumn}&sortOrder={sortOrder}]
### Top Ranked Members [GET]

+ Parameters
    + contestType (required, string, `Competitors`) ... Ranking Type, support "Competitors", "Schools" and "Countries"
    + pageIndex (optional, number, `1`) ... The paging number, 1-based, -1 if no paging. It can be null.
    + pageSize (optional, number, `50`) ... The max number of the results, should be set if pageIndex is set.
    + sortColumn (optional, string, `Handle`) ... The column name to sort, can be null.
    + sortOrder (optional, string, `asc`) ... The sorting order, can be null. If it's set, it can only be 'asc' or 'desc'.
    
+ Response 200 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                "Rank": 1,
                "Handle": "Petr",
                "userId": 123457899,
                "Color": "Red",
                "Rating": 3000
                },
                {
                    "Rank": 2,
                    "Handle": "ACRush",
                    "userId": 123457892,
                    "Color": "Red",
                    "Rating": 2500
                },
                {
                    "Rank": 3,
                    "Handle": "lympanda",
                    "userId": 123457891,
                    "Color": "Yellow",
                    "Rating": 2000
                }
            ]
        }

    
+ Response 201 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "Rank": 1,
                    "Name": "University of Tokyo",
                    "Country": "Japan",
                    "Member Count": 73,
                    "Rating": 3000
                },
                {
                    "Rank": 2,
                    "Name": "University of Washington",
                    "Country": "USA",
                    "Member Count": 73,
                    "Rating": 3000
                },
                {
                    "Rank": 3,
                    "Name": "Tsinghua University",
                    "Country": "China",
                    "Member Count": 73,
                    "Rating": 3000
                }
            ]
        }

+ Response 202 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "Rank": 1,
                    "Name": "Japan",
                    "Member Count": 73,
                    "Rating": 3000
                },
                {
                    "Rank": 2,
                    "Name": "USA",
                    "Member Count": 73,
                    "Rating": 3000
                },
                {
                    "Rank": 3,
                    "Name": "China",
                    "Member Count": 73,
                    "Rating": 3000
                }
            ]
        }

+ Response 404 (application/json)

        {
            "description":"unknown ranking type.",
            "name":"Not Found","value":"404"
        }

+ Response 400 (application/json)

        {
            "description":"Invalid Page Index.",
            "name":"Bad Request","value":"400"
        }
        
# Group Studio Contests

## Top Ranked Members [/studio/statistics/tops/{contestType}?pageIndex={pageIndex}&pageSize={pageSize}&sortColumn={sortColumn}&sortOrder={sortOrder}]
### Top Ranked Members [GET]

+ Parameters
    + contestType (required, string, `Competitors`) ... Ranking Type, support "Competitors", "Schools" and "Countries"
    + pageIndex (optional, number, `1`) ... The paging number, 1-based, -1 if no paging. It can be null.
    + pageSize (optional, number, `50`) ... The max number of the results, should be set if pageIndex is set.
    + sortColumn (optional, string, `Handle`) ... The column name to sort, can be null.
    + sortOrder (optional, string, `asc`) ... The sorting order, can be null. If it's set, it can only be 'asc' or 'desc'.
    
+ Response 200 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "Rank": 1,
                    "Handle": "Petr",
                    "userId": 123457898,
                    "Color": "Red",
                    "numberOfWinningSubmissions": 3000
                },
                {
                    "Rank": 2,
                    "Handle": "ACRush",
                    "userId": 123457899,
                    "Color": "Red",
                    "numberOfWinningSubmissions": 2500
                },
                {
                    "Rank": 3,
                    "Handle": "lympanda",
                    "userId": 123457891,
                    "Color": "Yellow",
                    "numberOfWinningSubmissions": 2000
                }
            ]
        }

    
+ Response 201 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "Rank": 1,
                    "Name": "University of Tokyo",
                    "Country": "Japan",
                    "Member Count": 73,
                    "numberOfWinningSubmissions": 3000
                },
                {
                    "Rank": 2,
                    "Name": "University of Washington",
                    "Country": "USA",
                    "Member Count": 73,
                    "numberOfWinningSubmissions": 3000
                },
                {
                    "Rank": 3,
                    "Name": "Tsinghua University",
                    "Country": "China",
                    "Member Count": 73,
                    "numberOfWinningSubmissions": 3000
                }
            ]
        }

+ Response 202 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "Rank": 1,
                    "Name": "Japan",
                    "Member Count": 73,
                    "numberOfWinningSubmissions": 3000
                },
                {
                    "Rank": 2,
                    "Name": "USA",
                    "Member Count": 73,
                    "numberOfWinningSubmissions": 3000
                },
                {
                    "Rank": 3,
                    "Name": "China",
                    "Member Count": 73,
                    "numberOfWinningSubmissions": 3000
                }
            ]
        }

+ Response 404 (application/json)

        {
            "description":"unknown ranking type.",
            "name":"Not Found",
            "value":"404"
        }

+ Response 400 (application/json)

        {
            "description":"Invalid Page Index.",
            "name":"Bad Request",
            "value":"400"
        }
        
# Group Algorithms Contests

## Top Ranked Members [/algorithms/statistics/tops/{contestType}?pageIndex={pageIndex}&pageSize={pageSize}&sortColumn={sortColumn}&sortOrder={sortOrder}]
### Top Ranked Members [GET]

+ Parameters
    + contestType (required, string, `Competitors`) ... Ranking Type, support "Competitors", "Schools" and "Countries"
    + pageIndex (optional, number, `1`) ... The paging number, 1-based, -1 if no paging. It can be null.
    + pageSize (optional, number, `50`) ... The max number of the results, should be set if pageIndex is set.
    + sortColumn (optional, string, `Handle`) ... The column name to sort, can be null.
    + sortOrder (optional, string, `asc`) ... The sorting order, can be null. If it's set, it can only be 'asc' or 'desc'.
    
+ Response 200 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "Rank": 1,
                    "Handle": "Petr",
                    "userId": 123457899,
                    "Color": "Red",
                    "Rating": 3000
                },
                {
                    "Rank": 2,
                    "Handle": "ACRush",
                    "userId": 123457891,
                    "Color": "Red",
                    "Rating": 2500
                },
                {
                    "Rank": 3,
                    "Handle": "lympanda",
                    "userId": 123457892,
                    "Color": "Yellow",
                    "Rating": 2000
                }
            ]
        }

    
+ Response 201 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "Rank": 1,
                    "Name": "University of Tokyo",
                    "Country": "Japan",
                    "Member Count": 73,
                    "Rating": 3000
                },
                {
                    "Rank": 2,
                    "Name": "University of Washington",
                    "Country": "USA",
                    "Member Count": 73,
                    "Rating": 3000
                },
                {
                    "Rank": 3,
                    "Name": "Tsinghua University",
                    "Country": "China",
                    "Member Count": 73,
                    "Rating": 3000
                }
            ]
        }

+ Response 202 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "Rank": 1,
                    "Name": "Japan",
                    "Member Count": 73,
                    "Rating": 3000
                },
                {
                    "Rank": 2,
                    "Name": "USA",
                    "Member Count": 73,
                    "Rating": 3000
                },
                {
                    "Rank": 3,
                    "Name": "China",
                    "Member Count": 73,
                    "Rating": 3000
                }
            ]
        }

+ Response 404 (application/json)

        {
            "description":"unknown ranking type.",
            "name":"Not Found",
            "value":"404"
        }

+ Response 400 (application/json)

        {
            "description":"Invalid Page Index.",
            "name":"Bad Request",
            "value":"400"
        }
